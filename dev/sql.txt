//triggers

CREATE TRIGGER `Revenueonsite` AFTER INSERT ON `onsite_sale`
 FOR EACH ROW INSERT INTO revenue(saleOrder_id,amount,source) values(new.sale_id,new.total_payment,"Onsite Sale")

 CREATE TRIGGER `Revenueonline` AFTER INSERT ON `online_order`
 FOR EACH ROW INSERT INTO revenue(saleOrder_id,amount,source) VALUES(new.order_id,new.total_payment,"Online Sale")

 CREATE TRIGGER `deduct_stock_base_on_exp` AFTER INSERT ON `product_stock`
 FOR EACH ROW IF NEW.exp_date <= CURDATE() THEN
        UPDATE product
        SET available_quantity = available_quantity - NEW.quantity
        WHERE product_id = NEW.product_id;
    END IF

CREATE TRIGGER `deduct_stock_base_on_sale` AFTER INSERT ON `product_sale`
 FOR EACH ROW UPDATE product
SET available_quantity = available_quantity - NEW.quantity
WHERE product_id = NEW.product_id


CREATE TRIGGER `productquanitity` AFTER UPDATE ON `product`
 FOR EACH ROW IF NEW.available_quantity < 50 THEN
    INSERT INTO product_notification (product_id, product_name, available_quantity,seen)
    VALUES (NEW.product_id, NEW.product_name, NEW.available_quantity,0);
  END IF

------------------------------------------------------------------------------------------------------------








//removed cattle + cattle join
SELECT cattle.cow_id, cattle.dob, cattle.age, cattle.gender, cattle.cow_breed, cattle.milking_status, cattle.reg_method, cattle.reg_date,
cattle.bought_price,cattle.stall_id, removed_cattle.removed_date, removed_cattle.reason, removed_cattle.sold_price
FROM cattle 
INNER JOIN removed_cattle 
ON cattle.cow_id = removed_cattle.cow_id;

//past emp join
SELECT employee.employee_id, employee.employee_name, employee.nic, employee.gender, employee.contact_number, employee.address, employee.employment,employee.existence,
past_employee.removed_date,past_employee.service_time
FROM employee 
INNER JOIN past_employee 
ON employee.employee_id = past_employee.user_id WHERE employee.employee_name LIKE '%e%'

//past labour join
SELECT laborer.laborer_id, laborer.name, laborer.nic, laborer.gender, laborer.contact_number, laborer.address, laborer.existence,
past_employee.removed_date,past_employee.service_time
FROM laborer 
INNER JOIN past_employee 
ON laborer.laborer_id = past_employee.user_id WHERE laborer.name LIKE '%e%';

//supplier details join
SELECT supply_order.supplier_id, supply_order.quantity, supply_order.status,supplier.address
FROM supply_order 
INNER JOIN supplier 
ON supply_order.supplier_id = supplier.supplier_id WHERE supply_order.supply_date=CURDATE();

//supply order details join
SELECT supply_order.supply_order_id, supply_order.supplier_id, supply_order.quantity, supply_order.supply_date, supply_order.status
FROM supply_order 
INNER JOIN milk_purchasing_price 
ON supply_order.supply_date = milk_purchasing_price.date WHERE supply_order.status="Ongoing"


//cus and cus order join for notifications
SELECT cusorder_notification.notify_id, cusorder_notification.shipped_date, cusorder_notification.shipped_time, cusorder_notification.order_id, online_order.customer_id
FROM cusorder_notification 
INNER JOIN online_order 
ON cusorder_notification.order_id = online_order.order_id WHERE cusorder_notification.seen=0












//stall - cattle view
